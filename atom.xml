<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://waterjiao.github.io</id>
    <title>Waterjiao</title>
    <updated>2019-06-23T16:51:13.019Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://waterjiao.github.io"/>
    <link rel="self" href="https://waterjiao.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://waterjiao.github.io/images/avatar.png</logo>
    <icon>https://waterjiao.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, Waterjiao</rights>
    <entry>
        <title type="html"><![CDATA[ARTS-第一周]]></title>
        <id>https://waterjiao.github.io/post/arts-di-yi-zhou</id>
        <link href="https://waterjiao.github.io/post/arts-di-yi-zhou">
        </link>
        <updated>2019-06-23T16:19:46.000Z</updated>
        <summary type="html"><![CDATA[<h2 id="arts">ARTS</h2>
<h3 id="algorithm">Algorithm</h3>
<h4 id="两数之和two-sum">两数之和（Two Sum）</h4>
<blockquote>
<p>两数之和，题目难度为 Easy</p>
</blockquote>
<p>给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。</p>
]]></summary>
        <content type="html"><![CDATA[<h2 id="arts">ARTS</h2>
<h3 id="algorithm">Algorithm</h3>
<h4 id="两数之和two-sum">两数之和（Two Sum）</h4>
<blockquote>
<p>两数之和，题目难度为 Easy</p>
</blockquote>
<p>给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。</p>
<!-- more -->
<p>思路：直接暴力求出，待后续优化</p>
<pre><code>class TwoSum {
    public int[] twoSum(int[] nums, int target) {
        for (int i = 0; i &lt; nums.length; ++i) {
            for (int j = i + 1; j &lt; nums.length; ++j) {
                if (nums[i] + nums[j] == target) {
                    return new int[]{i, j};
                }
            }
        }
        return null;
    }
}
</code></pre>
<h3 id="review">Review</h3>
<blockquote>
<p>暂无，待补上</p>
</blockquote>
<h3 id="tip">Tip</h3>
<p>####Python模块安装到Site-packages
使用“setuptools”将模块安装到site-packages</p>
<ol>
<li>创建一个发布描述</li>
<li>生成一个发布文件</li>
<li>安装发布文件
例如：下面我编写一个helloworld.py，就是helloworld，但是我又想在其他py文件中使用它，第一种方法：在同一目录下，直接import helloworld，第二种方法，放在解释器的site-package位置，第三种方法，放在标准库（当然不会），其实第一种还有就是from 不同目录 import helloworld</li>
</ol>
<pre><code class="language-python">def helloworld(name:str) -&gt; str:
    return name+' said: helloworld'
</code></pre>
<p>按照第二种方法，模块安装到Site-package</p>
<ol>
<li>创建发布描述，要创建两个文件，这两个文件放在与helloworld.py文件的同一个文件夹中，第一个文件必须命名为setup.py</li>
<li>另一个文件命名为README.txt
下面来看一下setup.py中的内容</li>
</ol>
<pre><code class="language-python">from setuptools import setup
setup(
    name='helloworld',
    version='1.0',
    description='Someone say hello',
    author='waterjiao',
    author_email='78567xxxx@qq.com',
    url='',
    py_modules=['helloworld'],
    )
</code></pre>
<p>之后输入命令：python3 setup.py sdist
sdist作为一个参数
形成helloworld-1.0.tar.gz
最后完成第三步，发布
python3 -m pip install helloworld-1.0.tar.gz</p>
<p>###Share</p>
<p>分享一篇关于SDN的吧，作者李呈，对于想了解OpenFlow协议的可以看看，<a href="https://www.sdnlab.com/1479.html">OpenFlow通信流程解读</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://waterjiao.github.io/post/hello-gridea</id>
        <link href="https://waterjiao.github.io/post/hello-gridea">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="http://hvenotes.fehey.com/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>𝖶𝗂𝗇𝖽𝗈𝗐𝗌</strong> 或 <strong>𝖬𝖺𝖼𝖮𝖲</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>